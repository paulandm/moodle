{"version":3,"file":"register.min.js","sources":["../src/register.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * For collecting WebAuthn authenticator details on factor setup\n *\n * @module     factor_webauthn/register\n * @copyright  Catalyst IT\n * @author     Alex Morris <alex.morris@catalyst.net.nz>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as utils from './utils';\n\nexport const init = (initialCreateArgs) => {\n    document.getElementById('id_submitbutton').disabled = true;\n    document.addEventListener('click', async(e) => {\n        if (!e.target.closest('#factor_webauthn-register')) {\n            return;\n        }\n\n        if (!navigator.credentials || !navigator.credentials.create) {\n            throw new Error('Browser not supported.');\n        }\n\n        const createArgs = JSON.parse(initialCreateArgs);\n        if (createArgs.success === false) {\n            throw new Error(createArgs.msg || 'unknown error occured');\n        }\n        e.preventDefault();\n\n        utils.recursiveBase64StrToArrayBuffer(createArgs);\n\n        const cred = await navigator.credentials.create(createArgs);\n\n        const authenticatorResponse = {\n            transports: cred.response.getTransports ? cred.response.getTransports() : null,\n            clientDataJSON: cred.response.clientDataJSON ? utils.arrayBufferToBase64(cred.response.clientDataJSON) : null,\n            attestationObject: cred.response.attestationObject ? utils.arrayBufferToBase64(cred.response.attestationObject) : null,\n        };\n\n        const inputResponse = document.getElementById('id_response_input');\n        inputResponse.value = JSON.stringify(authenticatorResponse);\n        document.getElementById('id_submitbutton').disabled = false;\n\n        // Do not use form.submit as it bypasses the change checker submit listener.\n        inputResponse.form.elements.submitbutton.click();\n    });\n};\n"],"names":["initialCreateArgs","document","getElementById","disabled","addEventListener","async","e","target","closest","navigator","credentials","create","Error","createArgs","JSON","parse","success","msg","preventDefault","utils","recursiveBase64StrToArrayBuffer","cred","authenticatorResponse","transports","response","getTransports","clientDataJSON","arrayBufferToBase64","attestationObject","inputResponse","value","stringify","form","elements","submitbutton","click"],"mappings":";;;;;;;;2BA0BqBA,oBACjBC,SAASC,eAAe,mBAAmBC,UAAW,EACtDF,SAASG,iBAAiB,SAASC,MAAAA,QAC1BC,EAAEC,OAAOC,QAAQ,wCAIjBC,UAAUC,cAAgBD,UAAUC,YAAYC,aAC3C,IAAIC,MAAM,gCAGdC,WAAaC,KAAKC,MAAMf,uBACH,IAAvBa,WAAWG,cACL,IAAIJ,MAAMC,WAAWI,KAAO,yBAEtCX,EAAEY,iBAEFC,MAAMC,gCAAgCP,kBAEhCQ,WAAaZ,UAAUC,YAAYC,OAAOE,YAE1CS,sBAAwB,CAC1BC,WAAYF,KAAKG,SAASC,cAAgBJ,KAAKG,SAASC,gBAAkB,KAC1EC,eAAgBL,KAAKG,SAASE,eAAiBP,MAAMQ,oBAAoBN,KAAKG,SAASE,gBAAkB,KACzGE,kBAAmBP,KAAKG,SAASI,kBAAoBT,MAAMQ,oBAAoBN,KAAKG,SAASI,mBAAqB,MAGhHC,cAAgB5B,SAASC,eAAe,qBAC9C2B,cAAcC,MAAQhB,KAAKiB,UAAUT,uBACrCrB,SAASC,eAAe,mBAAmBC,UAAW,EAGtD0B,cAAcG,KAAKC,SAASC,aAAaC"}