define("factor_webauthn/utils",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.recursiveBase64StrToArrayBuffer=_exports.arrayBufferToBase64=void 0;
/**
   * WebAuthn utility functions, for handling array buffers.
   *
   * @module     factor_webauthn/utils
   * @copyright  Catalyst IT
   * @author     Alex Morris <alex.morris@catalyst.net.nz>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const recursiveBase64StrToArrayBuffer=obj=>{if("object"==typeof obj)for(let key in obj)if("string"==typeof obj[key]){let str=obj[key];if("=?BINARY?B?"===str.substring(0,"=?BINARY?B?".length)&&"?="===str.substring(str.length-"?=".length)){str=str.substring("=?BINARY?B?".length,str.length-"?=".length);const binaryString=window.atob(str),len=binaryString.length,bytes=new Uint8Array(len);for(let i=0;i<len;i++)bytes[i]=binaryString.charCodeAt(i);obj[key]=bytes.buffer}}else recursiveBase64StrToArrayBuffer(obj[key])};_exports.recursiveBase64StrToArrayBuffer=recursiveBase64StrToArrayBuffer;_exports.arrayBufferToBase64=buffer=>{let binary="";const bytes=new Uint8Array(buffer),len=bytes.byteLength;for(let i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}}));

//# sourceMappingURL=utils.min.js.map