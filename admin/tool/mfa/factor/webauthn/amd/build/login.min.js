define("factor_webauthn/login",["exports","./utils"],(function(_exports,utils){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,utils=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * For collecting WebAuthn authenticator details on login
   *
   * @module     factor_webauthn/login
   * @copyright  Catalyst IT
   * @author     Alex Morris <alex.morris@catalyst.net.nz>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(utils);_exports.init=initialArgs=>{document.addEventListener("click",(async e=>{if(!e.target.closest("#id_submitbutton"))return;if(!navigator.credentials||!navigator.credentials.create)throw new Error("This browser does not support webauthn.");const getArgs=JSON.parse(initialArgs);if(!1===getArgs.success)throw new Error(getArgs.msg||"unknown error occured");e.preventDefault(),utils.recursiveBase64StrToArrayBuffer(getArgs);const authenticatorAttestationResponse=(cred=>{var _cred$response,_cred$response2,_cred$response3,_cred$response4;const response={id:null==cred?void 0:cred.rawId,clientDataJSON:null===(_cred$response=cred.response)||void 0===_cred$response?void 0:_cred$response.clientDataJSON,authenticatorData:null===(_cred$response2=cred.response)||void 0===_cred$response2?void 0:_cred$response2.authenticatorData,signature:null===(_cred$response3=cred.response)||void 0===_cred$response3?void 0:_cred$response3.signature,userHandle:null===(_cred$response4=cred.response)||void 0===_cred$response4?void 0:_cred$response4.userHandle};return Object.entries(response).forEach((_ref=>{let[key,value]=_ref;value&&(response[key]=utils.arrayBufferToBase64(value))})),response})(await navigator.credentials.get(getArgs));document.getElementById("id_response_input").value=JSON.stringify(authenticatorAttestationResponse),document.getElementById("id_response_input").form.submit()}))}}));

//# sourceMappingURL=login.min.js.map